@import url('https://fonts.googleapis.com/css?family=Khmer|Roboto');

// Font Family
@font-face {
  font-family: 'ClearSans-Regular';
  src: url("../../src/assets/fonts/ClearSans/ClearSans-Regular.ttf");
}

@font-face {
  font-family: 'ClearSans-Light';
  src: url("../../src/assets/fonts/ClearSans/ClearSans-Light.ttf");
}

@font-face {
  font-family: 'ClearSans-Medium';
  src: url("../../src/assets/fonts/ClearSans/ClearSans-Medium.ttf");
}

@font-face {
  font-family: 'Westfalia';
  src: url("../../src/assets/fonts/Westfalia/Westfalia-Regular.otf");
}

@font-face {
  font-family: 'SFUIDisplay';
  src: url("../../src/assets/fonts/SF UI Display/SF-UI-Display-Light.ttf");
}

//$font-regular: ClearSans-Regular;
//$font-bold: ClearSans-Regular;
//$font-menu-header: ClearSans-Regular;
//$font-p-facts: ClearSans-Light;
$font-h1: Westfalia;
$font-h5: ClearSans-Medium;
$font-price: SFUIDisplay;
$font-p-md: ClearSans-Light;
$font-p: ClearSans-Light;
$font-p-medium: ClearSans-Medium;
$font-label-light: ClearSans-Light;
$font-label-medium: ClearSans-Medium;
$font-subheading: ClearSans-Light;

$baseline: 1.5rem;

$minScreen: 20rem;
$maxScreen: 160rem;
$minFont: 0.8rem;
$maxFont: 4rem;

// Font Sizes
$h1-font-size: 8.108108108rem;
$h2-font-size: 5.405405405rem;
$h3-font-size: 0.810810811rem;
$h4-font-size: 0.810810811rem;
$price-font-size: 0.810810811rem;
$h5-font-size: 0.756756757rem;
$subheading-font-size: 0.540540541rem;
$menu-font-size: 0.540540541rem;
$p-md-font-size: 0.513513514rem;
$p-font-size: 0.486486486rem;
$label-font-size: 0.427875557rem;


//Font Colors
$h1-font-color: #696969;
$h2-font-color: #696969;
$h3-font-color: #fff;
$h4-font-color: #fff;
$h5-font-color: #696969;
$price-font-color: #fff;
$menu-font-color: #fff;
$subheading-font-color: #fff;
$label-font-color: #b8b8b8;
$p-md-font-color: #8C8C8C;
$p-font-color-roboto: #b8b8b8;
$p-font-color-ClearSans-1: #9F9F9F;
$p-font-color-ClearSans-2: #696969;
$label-font-color-SFUIDisplay: #6AC00D;
$label-font-color-1: #fff;
$label-font-color-Roboto: #8C8C8C;
$label-font-color-2: #E0E0E0;
$label-font-color-KhmerSangamMN: #8C8C8C;


//$responsive-type-min-width: 320px !default;
//$responsive-type-max-width: 2732px !default;
//
//// Base Responsive resize function that the type one uses
//@mixin responsive-resize($properties, $min-vw, $max-vw, $min-value, $max-value) {
//  @each $property in $properties {
//    #{$property}: $min-value;
//  }
//
//  @media (min-width: $min-vw) {
//    @each $property in $properties {
//      #{$property}: calc(#{$min-value} + #{strip-unit($max-value - $min-value)} * (100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)});
//    }
//  }
//
//  @media (min-width: $max-vw) {
//    @each $property in $properties {
//      #{$property}: $max-value;
//    }
//  }
//}
//
//// Type Focus helper mixin for the resize function
//@mixin responsive-type($min-value, $max-value, $properties: font-size) {
//  // use the global default values based on the assumption these
//  // will be contained in a block
//  $min-vw: $responsive-type-min-width;
//  $max-vw: $responsive-type-max-width;
//
//  // check if value is using the "@" api syntax.
//  @if ( type-of($min-value) == "string") {
//    // So it is a string does it have a "@" symbol to break apart
//    @if ( str-index($min-value, '@') ) {
//      // split string helper
//      $min-value-list : split-str($min-value, '@');
//      // unquote the split and cast the string to a number
//      // http://hugogiraudel.com/2014/01/15/sass-string-to-number/
//      $min-value: to-number( unquote( nth($min-value-list, 1) ) );
//      $min-vw: to-number( unquote( nth($min-value-list, 2) ));
//    }
//  }
//
//  // run the same checks over the $max-value
//  @if ( type-of($max-value) == "string") {
//    // So it is a string does it have a "@" symbol to break apart
//    @if ( str-index($max-value, '@') ) {
//      $max-value-list : split-str($max-value, '@');
//      $max-value: to-number( unquote( nth($max-value-list, 1) ) );
//      $max-vw: to-number( unquote( nth($max-value-list, 2) ));
//    }
//  }
//
//  // feed the shorter api back to the responsice resizer
//  @include responsive-resize($properties, $min-vw, $max-vw, $min-value, $max-value);
//}


@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}


@mixin fluid-type($properties, $min-vw, $max-vw, $min-value, $max-value) {
  & {
    @each $property in $properties {
      #{$property}: $min-value;
    }

    @media screen and (min-width: $min-vw) {
      @each $property in $properties {
        #{$property}: calc(#{$min-value} + #{strip-unit($max-value - $min-value)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
      }
    }

    @media screen and (min-width: $max-vw) {
      @each $property in $properties {
        #{$property}: $max-value;
      }
    }
  }
}

